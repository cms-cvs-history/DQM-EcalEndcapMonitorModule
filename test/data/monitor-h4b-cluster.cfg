process ECALDQM = { 

#include "EventFilter/EcalTBRawToDigi/data/Ecal07UnpackerData.cfi"

     module ecalEBunpacker = EcalDCCTB07UnpackingModule{
#       untracked string tbName = "h2"
#       include "EventFilter/EcalTBRawToDigi/data/h2_mapping.cfi"
       untracked string tbName = "h4"
       include "EventFilter/EcalTBRawToDigi/data/h4_mapping.cfi"
       untracked bool produceEEdigi = true
       untracked bool produceEBdigi = false
     }

include "RecoTBCalo/EcalTBHodoscopeReconstructor/data/ecal2006TBHodoscopeReconstructor.cfi"

     replace ecal2006TBHodoscopeReconstructor.rawInfoProducer = "ecalEBunpacker"

include "RecoTBCalo/EcalTBTDCReconstructor/data/ecal2006TBTDCReconstructor.cfi"

     replace ecal2006TBTDCReconstructor.rawInfoProducer = "ecalEBunpacker"
     replace ecal2006TBTDCReconstructor.eventHeaderProducer = "ecalEBunpacker"

     module ecalUncalibHit = ecalFixedAlphaBetaFitUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalFixedAlphaBetaFitUncalibRecHit.cfi"

     replace ecalUncalibHit.MinAmplBarrel = 12.
     replace ecalUncalibHit.MinAmplEndcap = 16.

#     module ecalUncalibHit = ecalWeightUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalWeightUncalibRecHit.cfi"

     replace ecalUncalibHit.EBdigiCollection = ecalEBunpacker:ebDigis
     replace ecalUncalibHit.EEdigiCollection = ecalEBunpacker:eeDigis

#     module ecalUncalibHit = ecal2006TBWeightUncalibRecHit from "RecoTBCalo/EcalTBRecProducers/data/ecal2006TBWeightUncalibRecHit.cfi"
#
#     replace ecalUncalibHit.digiProducer = "ecalEBunpacker"
#     replace ecalUncalibHit.EBdigiCollection = "ebDigis"
#

include "RecoLocalCalo/EcalRecProducers/data/ecalRecHit.cfi"

     replace ecalRecHit.EBuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEB
     replace ecalRecHit.EEuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEE

include "DQM/EcalEndcapMonitorModule/data/EcalEndcapMonitorModule.cfi"

include "DQM/EcalEndcapMonitorTasks/data/EcalEndcapMonitorTasks.cfi"

include "Geometry/EcalMapping/data/EcalMapping.cfi"
include "Geometry/EcalMapping/data/EcalMappingRecord.cfi"

include "DQM/EcalEndcapMonitorClient/data/EcalEndcapMonitorClient.cfi"

     replace ecalEndcapMonitorClient.maskFile = "maskfile.dat"
     replace ecalEndcapMonitorClient.location = "H4B"
     replace ecalEndcapMonitorClient.baseHtmlDir = "."
     replace ecalEndcapMonitorClient.enabledClients = { "Integrity",
                                                        "Occupancy",
                                                        "StatusFlags",
                                                        "PedestalOnline",
                                                        "Pedestal", "TestPulse",
                                                        "Laser", "Timing",
                                                        "Led",
                                                        "BeamCalo", "BeamHodo",
                                                        "Cluster" }
#     replace ecalEndcapMonitorClient.superModules = { 10 }
     replace ecalEndcapMonitorClient.superModules = { 4, 5, 6 }

     module preScaler = Prescaler{ int32 prescaleFactor = 1 }

     module dqmInfoEE = DQMEventInfo{
       untracked string subSystemFolder = "EcalEndcap"
     }

include "RecoEcal/EgammaClusterProducers/data/ecalClusteringSequence.cff"

     sequence ecalEndcapDataSequence = { preScaler,
                                         ecalEBunpacker,
                                         ecal2006TBHodoscopeReconstructor,
                                         ecal2006TBTDCReconstructor,
                                         ecalUncalibHit,
                                         ecalRecHit,
                                         islandBasicClusters,
                                         islandSuperClusters,
                                         hybridSuperClusters }

     sequence ecalEndcapMonitorSequence = { ecalEndcapMonitorModule,
                                            dqmInfoEE,
                                            ecalEndcapMonitorClient }

     path p = { ecalEndcapDataSequence, ecalEndcapMonitorSequence }
     endpath q = { ecalEndcapTestBeamTasksSequence, ecalEndcapClusterTask }

     untracked PSet maxEvents = {untracked int32 input = 150}
     source = PoolSource{
#---
# replace /tmp with the path to your file
       untracked vstring fileNames = { 'file:/tmp/h4b.00020937.A.0.0.root' }
     }

     es_source src1 = EcalTrivialConditionRetriever{
       untracked vdouble amplWeights = { -0.333, -0.333, -0.333,
                                          0.000,  0.000,  1.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble pedWeights  = {  0.333,  0.333,  0.333,
                                          0.000,  0.000,  0.000,
                                          0.000,  0.000,  0.000,  0.000 }
       untracked vdouble jittWeights = {  0.041,  0.041,  0.041,
                                          0.000,  1.325, -0.050,
                                         -0.504, -0.502, -0.390,  0.000 }
     }

include "CalibCalorimetry/EcalLaserCorrection/data/ecalLaserCorrectionService.cfi"

     service = MessageLogger{
       untracked vstring destinations = { "cout" }
       untracked vstring categories = { "EcalTBInputService",
                                        "EcalTBRawToDigi",
                                        "EcalTBRawToDigiTriggerType",
                                        "EcalTBRawToDigiTpg",
                                        "EcalTBRawToDigiNumTowerBlocks",
                                        "EcalTBRawToDigiTowerId",
                                        "EcalTBRawToDigiTowerSize",
                                        "EcalTBRawToDigiChId",
                                        "EcalTBRawToDigiGainZero",
                                        "EcalTBRawToDigiDccBlockSize",
                                        "EcalRawToDigiDev",
                                        "EcalRawToDigiDevTriggerType",
                                        "EcalRawToDigiDevTpg",
                                        "EcalRawToDigiDevNumTowerBlocks",
                                        "EcalRawToDigiDevTowerId",
                                        "EcalRawToDigiDevTowerSize",
                                        "EcalRawToDigiDevChId",
                                        "EcalRawToDigiDevGainZero",
                                        "EcalRawToDigiDevDccBlockSize",
                                        "EcalRawToDigiDevMemBlock",
                                        "EcalRawToDigiDevMemTowerId",
                                        "EcalRawToDigiDevMemChId",
                                        "EcalRawToDigiDevMemGain",
                                        "EcalRawToDigiDevTCC",
                                        "EcalRawToDigiDevSRP",
                                        "EcalDCCHeaderRuntypeDecoder",
                                        "EcalEndcapMonitor"
                                      }
       untracked PSet cout = {
         untracked string threshold = "WARNING"
         untracked PSet default                        = { untracked int32 limit = 0 }
         untracked PSet EcalTBInputService             = { untracked int32 limit = 0 }
         untracked PSet EcalTBRawToDigi                = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTriggerType     = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTpg             = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiNumTowerBlocks  = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerId         = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerSize       = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiChId            = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiGainZero        = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiDccBlockSize    = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDev               = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTriggerType    = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTpg            = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevNumTowerBlocks = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTowerId        = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTowerSize      = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevChId           = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevGainZero       = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevDccBlockSize   = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevMemBlock       = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevMemTowerId     = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevMemChId        = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevMemGain        = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevTCC            = { untracked int32 limit = 1000 }
         untracked PSet EcalRawToDigiDevSRP            = { untracked int32 limit = 1000 }
         untracked PSet EcalDCCHeaderRuntypeDecoder    = { untracked int32 limit = 1000 }
         untracked PSet EcalEndcapMonitor              = { untracked int32 limit = 0 }
         untracked bool noTimeStamps = true
         untracked bool noLineBreaks = true
       }
     }

     service = DaqMonitorROOTBackEnd{
       untracked int32 verbose = 0
     }

}

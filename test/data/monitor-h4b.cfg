process ECALDQM = { 

include "EventFilter/EcalTBRawToDigi/data/EcalUnpackerData.cfi"

include "RecoTBCalo/EcalTBHodoscopeReconstructor/data/ecal2006TBHodoscopeReconstructor.cfi"

     replace ecal2006TBHodoscopeReconstructor.rawInfoProducer = "ecalEBunpacker"

include "RecoTBCalo/EcalTBTDCReconstructor/data/ecal2006TBTDCReconstructor.cfi"

     replace ecal2006TBTDCReconstructor.rawInfoProducer = "ecalEBunpacker"
     replace ecal2006TBTDCReconstructor.eventHeaderProducer = "ecalEBunpacker"

#     module ecalUncalibHit = ecalFixedAlphaBetaFitUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalFixedAlphaBetaFitUncalibRecHit.cfi"
     module ecalUncalibHit = ecalWeightUncalibRecHit from "RecoLocalCalo/EcalRecProducers/data/ecalWeightUncalibRecHit.cfi"

     replace ecalUncalibHit.EBdigiCollection = ecalEBunpacker:ebDigis
     replace ecalUncalibHit.EEdigiCollection = ecalEBunpacker:eeDigis

#     module ecalUncalibHit = ecal2006TBWeightUncalibRecHit from "RecoTBCalo/EcalTBRecProducers/data/ecal2006TBWeightUncalibRecHit.cfi"
#
#     replace ecalUncalibHit.digiProducer = "ecalEBunpacker"
#     replace ecalUncalibHit.EBdigiCollection = "ebDigis"
#

include "RecoLocalCalo/EcalRecProducers/data/ecalRecHit.cfi"

     replace ecalRecHit.EBuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEB
     replace ecalRecHit.EEuncalibRecHitCollection = ecalUncalibHit:EcalUncalibRecHitsEE

include "DQM/EcalEndcapMonitorModule/data/EcalEndcapMonitorModule.cfi"

     replace ecalEndcapMonitorModule.enableMonitorDaemon = false
     replace ecalEndcapMonitorModule.enableCleanup = false

include "DQM/EcalEndcapMonitorTasks/data/EcalEndcapMonitorTasks.cfi"

include "DQM/EcalEndcapMonitorTasks/data/disableCleanup.cff"

include "DQM/EcalEndcapMonitorClient/data/EcalEndcapMonitorClient.cfi"

     replace ecalEndcapMonitorClient.location = "H4B"
     replace ecalEndcapMonitorClient.baseHtmlDir = "."
     replace ecalEndcapMonitorClient.enableMonitorDaemon = false
     replace ecalEndcapMonitorClient.prefixME = ""
     replace ecalEndcapMonitorClient.enableServer = false
     replace ecalEndcapMonitorClient.superModules = { 10 }

     module preScaler = Prescaler{ int32 prescaleFactor = 1 }

     module eventSource = EventCoordinatesSource{
       untracked bool enableMonitorDaemon = false
     }

     sequence ecalEndcapDataSequence = { preScaler,
                                         eventSource,
                                         ecalEBunpacker,
                                         ecal2006TBHodoscopeReconstructor,
                                         ecal2006TBTDCReconstructor,
                                         ecalUncalibHit,
                                         ecalRecHit }

     sequence ecalEndcapMonitorSequence = { ecalEndcapMonitorModule,
                                            ecalEndcapMonitorClient }

     path p = { ecalEndcapDataSequence, ecalEndcapMonitorSequence }
     endpath q = { ecalEndcapTestBeamTasksSequence }

#     service = LockService{ }

     untracked PSet maxEvents = {untracked int32 input = 150}
     source = PoolSource{
# replace /tmp with the path to your file
       untracked vstring fileNames = { 'file:/tmp/h4b.00014790.A.0.0.root' }
       untracked uint32 debugVebosity = 10
       untracked bool   debugFlag     = true
     }

     es_source src1 = EcalTrivialConditionRetriever{
       untracked bool producedEcalWeights = false
     }

     service = MessageLogger{
       untracked vstring destinations = { "cout" }
       untracked vstring categories = { "EcalTBInputService",
                                        "EcalTBRawToDigi",
                                        "EcalTBRawToDigiTriggerType",
                                        "EcalTBRawToDigiTpg",
                                        "EcalTBRawToDigiNumTowerBlocks",
                                        "EcalTBRawToDigiTowerId",
                                        "EcalTBRawToDigiTowerSize",
                                        "EcalTBRawToDigiChId",
                                        "EcalTBRawToDigiGainZero",
                                        "EcalTBRawToDigiGainSwitch",
                                        "EcalTBRawToDigiDccBlockSize",
                                        "EcalEndcapMonitor"
                                      }
       untracked PSet cout = {
         untracked string threshold = "WARNING"
         untracked PSet default                       = { untracked int32 limit = 0 }
         untracked PSet EcalTBInputService            = { untracked int32 limit = 0 }
         untracked PSet EcalTBRawToDigi               = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTriggerType    = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTpg            = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiNumTowerBlocks = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerId        = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiTowerSize      = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiChId           = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiGainZero       = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiGainSwitch     = { untracked int32 limit = 1000 }
         untracked PSet EcalTBRawToDigiDccBlockSize   = { untracked int32 limit = 1000 }
         untracked PSet EcalEndcapMonitor             = { untracked int32 limit = 0 }
         untracked bool noTimeStamps = true
         untracked bool noLineBreaks = true
       }
     }

     service = DaqMonitorROOTBackEnd{ }

}
